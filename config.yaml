# =============================================================================
# QUANTUM LAYOUT OPTIMIZATION CONFIGURATION - MINIMAL VERSION
# =============================================================================
# 
# This config contains ONLY parameters actually used in the codebase.
# No bloat, no unused settings - just what's needed for the pipeline.
#
# =============================================================================

# =============================================================================
# EXPERIMENT SETTINGS
# =============================================================================
experiment:
  name: "heavy_hex_optimization"
  description: "Layout optimization for IBM Heavy-Hex backends targeting 25% CX reduction"
  seed: 42                                # Global random seed for reproducibility
  output_dir: "results"                   # Output directory for results

# =============================================================================
# BACKEND CONFIGURATION
# =============================================================================
backend:
  name: "FakeBrisbane"                    # Backend to use: FakeBrisbane, FakePerth, FakeSherbrooke
  num_qubits: 127                         # Number of qubits (for display only)

# =============================================================================
# BENCHMARK SETTINGS
# =============================================================================
benchmarks:
  # Which benchmark suite to run (only one active at a time)
  active_suite: "quantum_volume"          # Options: quantum_volume, application_circuits, qasm_circuits
  
  # Circuit sizes to test (simple list)
  circuit_sizes: [21, 25, 60]             # Qubit counts to benchmark
    
  # Quantum Volume settings
  quantum_volume:
    depth_factor: 1.0                     # Circuit depth = width × depth_factor
    
  # Application circuit settings
  application_circuits:
    qaoa:
      layers: 2                           # QAOA depth parameter (p)
    vqe:
      ansatz_reps: 2                      # VQE ansatz repetitions

# =============================================================================
# LAYOUT OPTIMIZATION
# =============================================================================
layout_optimization:
  algorithm: "community"                  # Algorithm to use: simple, community, stock
  
  # Community detection settings (when using community algorithm)
  clustering:
    # Algorithms to compare (list of algorithms to run)
    algorithms: ["greedy_modularity", "louvain", "spectral", "kmeans", "heavy_hex"]
    
    # Common parameters
    target_cluster_size: 7                # Preferred cluster size (7 for Heavy-Hex cells, 4 for kites)
    
    # Algorithm-specific parameters
    greedy_modularity:
      resolution: 1.0                     # Modularity resolution parameter
    
    louvain:
      resolution: 1.0                     # Modularity resolution parameter
      
    spectral:
      n_clusters: null                    # Number of clusters (null = auto-detect)
      
    kmeans:
      n_clusters: null                    # Number of clusters (null = auto-detect)
      
    heavy_hex:
      prefer_hex: true                    # Prefer 7-qubit hex over 4-qubit kites
  
  # Simulated annealing refinement settings (1-second post-processing)
  annealing:
    enabled: true                         # DISABLE annealing to test greedy only
    max_time: 3.0                        # Maximum annealing time in seconds
    initial_temperature: 3.0             # Starting temperature (T₀)
    cooling_rate: 0.95                   # Temperature decay factor (α)
    max_steps: 800                       # Maximum annealing steps
    noise_penalty_weight: 0.1            # Weight for gate error penalty (λ)
    
    # Move probabilities
    move_probabilities:
      random_swap: 0.7                   # Probability of random swap moves
      community_shift: 0.3               # Probability of community shift moves
    
    # Progress reporting
    progress_steps: 200                  # Report progress every N steps
    
    # Acceptance criteria
    min_temperature: 0.01                # Stop when temperature drops below this

# =============================================================================
# TRANSPILATION SETTINGS
# =============================================================================
transpilation:
  baseline_optimization_level: 3       # Qiskit optimization level for comparison

# =============================================================================
# PERFORMANCE TARGETS
# =============================================================================
targets:
  cx_reduction_target_percent: 25.0      # Target CX gate reduction
